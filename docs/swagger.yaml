definitions:
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  timetracker.CreateItemInput:
    properties:
      name:
        example: Завтрак
        type: string
      userId:
        type: integer
    required:
    - name
    - userId
    type: object
  timetracker.CreateUserInput:
    properties:
      name:
        example: Иван
        type: string
      pasportNumber:
        example: 1234 123456
        type: string
    required:
    - name
    - pasportNumber
    type: object
  timetracker.UpdateItemInput:
    properties:
      name:
        type: string
    type: object
  timetracker.UpdateUserInput:
    properties:
      name:
        example: Иван
        type: string
      pasportNumber:
        example: 1234 123456
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for Time-trackerList Application
  title: Time-Tracker
  version: "1.0"
paths:
  /api/item/:
    post:
      consumes:
      - application/json
      description: create item
      operationId: create-item
      parameters:
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/timetracker.CreateItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: CreateItem
      tags:
      - item
  /api/item/{id}:
    delete:
      consumes:
      - application/json
      description: delete item
      operationId: delete-item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: DeleteItem
      tags:
      - item
    get:
      consumes:
      - application/json
      description: get item by user id
      operationId: get-item-by-id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetItemsById
      tags:
      - item
    put:
      consumes:
      - application/json
      description: update item
      operationId: update-item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/timetracker.UpdateItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: UpdateItem
      tags:
      - item
  /api/item/{id}/time:
    get:
      consumes:
      - application/json
      description: get item by date
      operationId: get-item-by-date
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Start time
        example: "2024-07-01T00:00:00Z"
        in: query
        name: timeStart
        required: true
        type: string
      - description: Stop time
        example: 2024-07-01T59:59:59Z
        in: query
        name: timeStop
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetItemsByDate
      tags:
      - item
  /api/item/{id}/time/{flag}:
    put:
      consumes:
      - application/json
      description: update item time
      operationId: update-item-time
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Start(1) or stop(0)
        in: path
        name: flag
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: UpdateItemTime
      tags:
      - item
  /api/user/:
    get:
      consumes:
      - application/json
      description: Get all users
      operationId: getAllUsers-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetAllUsers
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create user
      operationId: create-user
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/timetracker.CreateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: CreateUser
      tags:
      - user
  /api/user/{id}:
    delete:
      consumes:
      - application/json
      description: delete user
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: DeleteUser
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update user
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/timetracker.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: UpdateUser
      tags:
      - user
  /api/user/search:
    get:
      consumes:
      - application/json
      description: search user
      operationId: search-user
      parameters:
      - description: Name filter
        example: Иван
        in: query
        name: name
        type: string
      - description: Passport number filter
        example: 1234 123456
        in: query
        name: passportNumber
        type: string
      - description: Page number
        example: 1
        in: query
        name: page
        type: integer
      - description: Page size
        example: 10
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SearchUser
      tags:
      - user
swagger: "2.0"
